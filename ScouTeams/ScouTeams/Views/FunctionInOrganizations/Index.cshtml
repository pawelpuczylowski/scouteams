@model IEnumerable<ScouTeams.Models.FunctionInOrganization>
@using ScouTeams.ViewModels
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p>
    @if (ViewData["TypeOrganization"].ToString() == TypeOrganization.KwateraGlowna.ToString())
    {
        <a asp-action="ShowKwateraGlowna" asp-controller="Home">Rezygnuj</a>
    }
    else if (ViewData["TypeOrganization"].ToString() == TypeOrganization.Choragiew.ToString())
    {
        <a asp-action="ShowChoragiew" asp-controller="Home">Rezygnuj</a>
    }
    else if (ViewData["TypeOrganization"].ToString() == TypeOrganization.Hufiec.ToString())
    {
        <a asp-action="ShowHufiec" asp-controller="Home">Rezygnuj</a>
    }
    else if (ViewData["TypeOrganization"].ToString() == TypeOrganization.Druzyna.ToString())
    {
        <a asp-action="ShowDruzyna" asp-controller="Home">Rezygnuj</a>
    }
    else if (ViewData["TypeOrganization"].ToString() == TypeOrganization.Zastep.ToString())
    {
        <a asp-action="ShowZastep" asp-controller="Home">Rezygnuj</a>
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FunctionName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FunctionName)
                </td>
                <td>
                    <a asp-action="Delete" asp-route-id="@item.FunctionInOrganizationId">Odbierz funkcję</a>
                </td>
            </tr>
        }
    </tbody>
</table>
